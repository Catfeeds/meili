<?php
/**
 * Created by PhpStorm.
 * Date: 2018/9/21
 * Time: 9:49
 */

namespace Bms\Logic;


class PackageLogic extends BmsBaseLogic
{
    /**
     * @param array $request
     * @return array
     * 获取列表
     */
    function getList($request = array()) {
        //筛选
        if(!empty($request['package_name']))
            $param['where']['package.package_name'] = array('LIKE', '%' . $request['package_name'] . '%');
        //排序条件
        $param['order'] = 'package.id DESC';
        //返回数据
        return D('Package')->getList($param);
    }
    /**
     * @param array $request
     * @return mixed
     */
    function findRow($request = array()) {
        //ID条件
        if(!empty($request['id'])) {
            $param['where']['package.id'] = $request['id'];
        } else {
            $this->setLogicInfo('参数错误！'); return false;
        }
        $row = D('Package')->findRow($param);
        if(!$row) {
            $this->setLogicInfo('未查到此记录！'); return false;
        }
        //获取封面文件
        $row['cover'] = api('File/getFiles',array($row['cover']));
        //获取轮播
//        $row['pictures'] = api('File/getFiles',array($row['pictures']));
        //返回数据
        return $row;
    }

    /**
     * @param array $data
     * @param array $request
     * @return array
     * 处理提交数据 进行加工或者添加其他默认数据
     */
    protected function processData($data = array(),$request = array()) {
        $data['package_desc'] = $_POST['package_desc'];
        return $data;
    }

    /*
     *更新操作完成后将选择的商品存入一卡通商品表
     * */
    function afterUpdate($result = 0, $request = array())
    {
        //根据一卡通ID 传的服务商品ID添加或者删除一卡通商品
        //存在商品
        if(!empty($request['service_ids'])){
            //判断该商品数量
            $service_number=$request['service_number'];
            //先删除掉该卡的所有商品 然后添加重新编辑加入的商品
            M('PackageService')->where(array('package_id'=>$request['id']))->delete();
            //添加选择的商品
            $service_ids=$request['service_ids'];
            foreach ($service_ids as $k=>$v){
                foreach ($service_number as $kk=>$vv){
                    //判断对应的商品ID和用户填写的数量
                    if($kk == $v){
                        $service_info=M('Service')->field('id service_id,service_name,count,service_sn,cover,price,service_short_desc')->find($v);
                        $service_info['package_id']=$request['id']? $request['id']:$result;
                        $service_info['number']=$vv[0]? $vv[0] : 1;
                        M('PackageService')->data($service_info)->add();
                    }
                }
            }
        }
        return parent::afterUpdate($result, $request); // TODO: Change the autogenerated stub
    }

    protected function afterRemove($result = 0, $request = array())
    {
        //删除该一卡通下面的一卡通服务商品
        if(!empty($request['ids'])){
            M('PackageService')->where(array('package_id'=>$request['ids']))->delete();
        }
        return parent::afterRemove($result, $request); // TODO: Change the autogenerated stub
    }
}